name: Plan infrastructure changes

on:
  workflow_call:
    inputs:
      config:
        description: OpenTofu configuration to plan.
        default: service
        required: true
        type: string
      environment:
        description: Environment to plan on.
        default: development
        required: true
        type: string
    secrets:
      AWS_REGION:
      AWS_ROLE_ARN:
      TF_VAR_ENVIRONMENT:
        required: false
      TF_VAR_EXPORT_EXPIRATION:
        required: false
      TF_VAR_KEY_RECOVERY_PERIOD:
        required: false
      TF_VAR_PROGRAM:
        required: false
      TF_VAR_PROJECT:
        required: false
      TF_VAR_REPO_OIDC_ARN:
      TF_VAR_REPOSITORY:
        required: false
      TF_VAR_VPC_CIDR:
      TF_VAR_VPC_PRIVATE_SUBNET_CIDRS:
      TF_VAR_VPC_PUBLIC_SUBNET_CIDRS:
  workflow_dispatch:
    inputs:
      config:
        description: OpenTofu configuration to plan.
        default: service
        required: true
        type: choice
        options:
          - foundation
          - networking
          - service
      environment:
        description: Environment to plan on.
        default: development
        required: true
        type: environment

permissions:
  contents: read
  id-token: write

env:
  TF_LOG: DEBUG

jobs:
  plan:
    name: Plan changes to ${{ inputs.config }} in ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'development' }}
    env:
      # Set required variables.
      TF_VAR_repo_oidc_arn: ${{ secrets.TF_VAR_REPO_OIDC_ARN }}
      TF_VAR_vpc_cidr: ${{ secrets.TF_VAR_VPC_CIDR }}
      TF_VAR_vpc_private_subnet_cidrs: ${{ secrets.TF_VAR_VPC_PRIVATE_SUBNET_CIDRS }}
      TF_VAR_vpc_public_subnet_cidrs: ${{ secrets.TF_VAR_VPC_PUBLIC_SUBNET_CIDRS }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION || 'us-west-1' }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_wrapper: false
      - name: Display OpenTofu version
        run: tofu version
      - name: Set optional variables
        env:
          # For any of these that have a value, the corresponding TF_VAR_*
          # environment variable will be set.
          ENVIRONMENT: ${{ secrets.TF_VAR_ENVIRONMENT }}
          EXPORT_EXPIRATION: ${{ secrets.TF_VAR_EXPORT_EXPIRATION }}
          KEY_RECOVERY_PERIOD: ${{ secrets.TF_VAR_KEY_RECOVERY_PERIOD }}
          PROGRAM: ${{ secrets.TF_VAR_PROGRAM }}
          PROJECT: ${{ secrets.TF_VAR_PROJECT }}
          REPOSITORY: ${{ secrets.TF_VAR_REPOSITORY }}
        run: |
          variables=(
            "environment" "export_expiration" "key_recovery_period" "program"
            "project" "repository"
          )
          for var in ${variables[@]}; do
            name="$(echo $var | tr '[:lower:]' '[:upper:]')"
            if [ -n "${!name}" ]; then
              echo "Setting TF_VAR_$var"
              echo "TF_VAR_$var=${!name}" >> $GITHUB_ENV
            else
              echo "$name is not set"
            fi
          done
      - name: Initialize OpenTofu
        working-directory: ./tofu/config/${{ inputs.config }}
        run: tofu init
      - name: Plan changes
        working-directory: ./tofu/config/${{ inputs.config }}
        run: tofu plan -concise -no-color -out tfplan > plan.txt
      - name: Display plan
        working-directory: ./tofu/config/${{ inputs.config }}
        run: tofu show -plan tfplan
      - name: Upload plan file
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.config }}-tfplan
          path: |
            ./tofu/config/${{ inputs.config }}/plan.txt
            ./tofu/config/${{ inputs.config }}/tfplan
          retention-days: 5
